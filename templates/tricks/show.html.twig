{% extends 'base.html.twig' %}

{% block title %}Tricks{% endblock %}

{% block body %}

    {% set hero_title = trick.title %}
    {% set hero_subtitle = "" %}
    {{ include('component/_hero_trick_show.html.twig') }}

    <section class="hero is-primary is-medium">
        <div class="hero-body">
            <div class="container">
                <h1 class="title">
                    Barre video/images (caroussel?)
                </h1>
            </div>
        </div>
    </section>



    <div class="container mt-6">

        <p>{{ trick.description }}</p>
        {{ include('component/_trick_edit_icons.html.twig') }}

        {% if is_granted('ROLE_USER') %}
            <button class="button is-primary" id="comment-modal">Poster un commentaire</button>
        {% endif %}
        {% for comment in comments %}
            <div class="box">
                <div class="message-body">
                    <div class="columns">
                        <div class="column is-one-fifth">
                            <figure class="image is-128x128">
                                {% if comment.user.image is not null %}
                                    {% set image_source = asset('/uploads/' ~ comment.user.image.name) %}
                                {% else %}
                                    {% set image_source = asset('/img/unknow.jpg') %}
                                {% endif %}
                                <img class="" src="{{ image_source }}" alt="Image">
                            </figure>
                            <p class="mt-2">
                                Par <strong>{{ comment.user.username }} </strong> <small>{{ comment.createdAt|format_date }}</small>
                            </p>
                            {{ include('component/_comment_edit_icons.html.twig') }}
                        </div>
                        <div class="column">{{ comment.content }}</div>
                    </div>
                </div>
            </div>
        {% endfor %}
    </div>
    {{ include('component/_pagination.html.twig') }}

    <div class="modal new-com-modal">
        <div class="modal-background"></div>
        <div class="modal-card">
            <header class="modal-card-head">
                <p class="modal-card-title">Poster un commentaire</p>
            </header>
            <section class="modal-card-body">
                {{ form_start(form) }}
                {{ form_widget(form) }}
            </section>
            <footer class="modal-card-foot">
                <button class="button is-primary">Enregistrer</button>
                <button class="button is-link cancel-modal" id="cancel-modal">Annuler</button>
                {{ form_end(form) }}
            </footer>
        </div>
    </div>


    {# todo : lien edit/delete and back #}
    {# <a href="{{ path('tricks_edit', {'id' : trick.id}) }}">edit the trick {{ trick.id }}</a> #}

    {# <a href="{{ path('tricks_index') }}">back to list</a> #}

    {# {{ include('tricks/_delete_form.html.twig') }} #}
{% endblock %}
    {% block javascripts %}
        {{ parent() }}
        <script>
            $(document).ready()
            {
                var $button = $("#comment-modal"),
                    $modal = $(".new-com-modal"),
                    $cancelButton = $(".cancel-modal");

                $button.click(function (e) {
                    e.preventDefault();
                    $modal.addClass('is-active');
                })

                $cancelButton.click(function (e) {
                    e.preventDefault();
                    $modal.removeClass('is-active');
                })
            }


            // * jquery/ajax to delete/edit comment in db and remove field
            var $a = $("a[data-delete]");

            $a.click(function (e) {
                e.preventDefault();

                var $a = $(this);
                var token = $(this).attr("data-token");
                var url = $(this).attr("href");
                if (confirm("Sur ???")) {

                    // fetch = requete (jusquau premier then)
                    fetch(url, {
                        method: "DELETE",
                        headers: {
                            "X-Requested-With": "XMLHttpRequest",
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({"_token": token})
                    }).then(
                        //    recup la reponse json
                        response => response.json()
                    ).then(data => {
                        // fais des choses avec la response
                        if (data.success)
                            $a.parent().parent().parent().parent().remove()
                        else
                            alert(data.error)
                    }).catch(e => alert(e))
                }
            })
        </script>
    {% endblock %}